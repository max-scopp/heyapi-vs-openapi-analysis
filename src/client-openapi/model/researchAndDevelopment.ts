/**
 * Tripletex API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { YearEndReport } from './yearEndReport';
import { ResearchAndDevelopmentOtherPublicSupport } from './researchAndDevelopmentOtherPublicSupport';
import { ResearchAndDevelopmentResolution } from './researchAndDevelopmentResolution';
import { GenericData } from './genericData';


export interface ResearchAndDevelopment { 
    yearEndReport?: YearEndReport;
    /**
     * Group ID
     */
    groupId?: number;
    /**
     * Sub group ID
     */
    subGroupId?: number;
    /**
     * Associated posts
     */
    posts?: Array<GenericData>;
    /**
     * Project Number
     */
    projectNumber?: string;
    /**
     * Project Title
     */
    projectTitle?: string;
    /**
     * Project Category
     */
    projectCategory?: ResearchAndDevelopment.ProjectCategoryEnum;
    /**
     * Application approved date
     */
    applicationApprovedDate?: string;
    /**
     * Project start date
     */
    projectStartDate?: string;
    /**
     * Project end date
     */
    projectEndDate?: string;
    /**
     * Approved R&D Incentive Start Year
     */
    approvedRndIncentiveStartYear?: number;
    /**
     * Approved R&D Incentive End Year
     */
    approvedRndIncentiveEndYear?: number;
    /**
     * Project Status
     */
    projectStatus?: ResearchAndDevelopment.ProjectStatusEnum;
    /**
     * Project status date
     */
    projectStatusDate?: string;
    /**
     * Resolutions
     */
    resolutions?: Array<ResearchAndDevelopmentResolution>;
    /**
     * Business Category
     */
    businessCategory?: ResearchAndDevelopment.BusinessCategoryEnum;
    /**
     * Is Collaborative Project With Other Enterprises
     */
    isCollaborativeProjectWIthOtherEnterprises?: ResearchAndDevelopment.IsCollaborativeProjectWIthOtherEnterprisesEnum;
    /**
     * Has Extensive Dissemination Through Conferences Publications Etc
     */
    hasExtensiveDisseminationThroughConferencesPublicationsEtc?: ResearchAndDevelopment.HasExtensiveDisseminationThroughConferencesPublicationsEtcEnum;
    /**
     * Maximum Approved Public Support As A Share Of Total Costs
     */
    readonly maximumApprovedPublicSupportAsAShareOfTotalCosts?: number;
    /**
     * Total Costs Previous Years
     */
    totalCostsPreviousYears?: number;
    /**
     * Total Gross Tax Deduction From Previous Years
     */
    totalGrossTaxDeductionFromPreviousYears?: number;
    /**
     * Cost In Income Year
     */
    costInIncomeYear?: number;
    /**
     * Included Personnel Costs In Income Year
     */
    includedPersonnelCostsInIncomeYear?: number;
    /**
     * Number Of Own Hours In Income Year
     */
    numberOfOwnHoursInIncomeYear?: number;
    /**
     * Other Public Supports
     */
    otherPublicSupports?: Array<ResearchAndDevelopmentOtherPublicSupport>;
    /**
     * Public Support As Reduced Worker Fee
     */
    publicSupportAsReducedWorkerFee?: number;
    /**
     * Total Gross Public Support In Project Period
     */
    readonly totalGrossPublicSupportInProjectPeriod?: number;
    /**
     * Was In Economic Difficulties At Application Time
     */
    wasInEconomicDifficultiesAtApplicationTime?: ResearchAndDevelopment.WasInEconomicDifficultiesAtApplicationTimeEnum;
    /**
     * Underlying Documents Used For Assessment
     */
    underlyingDocumentsUsedForAssessment?: ResearchAndDevelopment.UnderlyingDocumentsUsedForAssessmentEnum;
    /**
     * Underlying Documentation Date
     */
    underlyingDocumentationDate?: string;
    /**
     * Total costs excluded from tax deduction
     */
    totalCostsExcludedFromTaxDeduction?: number;
    /**
     * Total costs for entire project period
     */
    readonly totalCostsForEntireProjectPeriod?: number;
    /**
     * Max approved gross amount public support
     */
    maxApprovedGrossAmountPublicSupport?: number;
    /**
     * Assigned support beyond max gross amount public support
     */
    assignedSupportBeyondMaxGrossAmountPublicSupport?: number;
    /**
     * Net tax deduction before reduction against other public support
     */
    netTaxDeductionBeforeReductionAgainstOtherPublicSupport?: number;
    /**
     * Tax deduction for the project
     */
    taxDeductionForTheProject?: number;
    /**
     * Additional tax for the project
     */
    additionalTaxForTheProject?: number;
    /**
     * Project to be signed by auditor
     */
    projectToBeSignedByAuditor?: ResearchAndDevelopment.ProjectToBeSignedByAuditorEnum;
    /**
     * Gross value tax reduction for current year
     */
    grossValueTaxDeduction?: number;
    /**
     * Net tax deduction after reduction against other public support
     */
    readonly allocatedSupportAmount?: number;
}
export namespace ResearchAndDevelopment {
    export type ProjectCategoryEnum = 'NONE' | 'RESEARCH' | 'DEVELOPMENT';
    export const ProjectCategoryEnum = {
        None: 'NONE' as ProjectCategoryEnum,
        Research: 'RESEARCH' as ProjectCategoryEnum,
        Development: 'DEVELOPMENT' as ProjectCategoryEnum
    };
    export type ProjectStatusEnum = 'NONE' | 'APPLICATION_REJECTED' | 'APPLICATION_APPROVED' | 'COMPLAINT_RECEIVED' | 'PROJECT_CANCELLED_BY_NFR' | 'APPROVAL_RESCINDED' | 'PROCESSING_AFTER_APPROVED_COMPLAINT' | 'ADMINISTRATIVELY_APPROVED_COMPLAINT';
    export const ProjectStatusEnum = {
        None: 'NONE' as ProjectStatusEnum,
        ApplicationRejected: 'APPLICATION_REJECTED' as ProjectStatusEnum,
        ApplicationApproved: 'APPLICATION_APPROVED' as ProjectStatusEnum,
        ComplaintReceived: 'COMPLAINT_RECEIVED' as ProjectStatusEnum,
        ProjectCancelledByNfr: 'PROJECT_CANCELLED_BY_NFR' as ProjectStatusEnum,
        ApprovalRescinded: 'APPROVAL_RESCINDED' as ProjectStatusEnum,
        ProcessingAfterApprovedComplaint: 'PROCESSING_AFTER_APPROVED_COMPLAINT' as ProjectStatusEnum,
        AdministrativelyApprovedComplaint: 'ADMINISTRATIVELY_APPROVED_COMPLAINT' as ProjectStatusEnum
    };
    export type BusinessCategoryEnum = 'NONE' | 'SMALL_BUSINESS' | 'MEDIUM_BUSINESS' | 'LARGE_BUSINESS';
    export const BusinessCategoryEnum = {
        None: 'NONE' as BusinessCategoryEnum,
        SmallBusiness: 'SMALL_BUSINESS' as BusinessCategoryEnum,
        MediumBusiness: 'MEDIUM_BUSINESS' as BusinessCategoryEnum,
        LargeBusiness: 'LARGE_BUSINESS' as BusinessCategoryEnum
    };
    export type IsCollaborativeProjectWIthOtherEnterprisesEnum = 'NONE' | 'NO' | 'YES';
    export const IsCollaborativeProjectWIthOtherEnterprisesEnum = {
        None: 'NONE' as IsCollaborativeProjectWIthOtherEnterprisesEnum,
        No: 'NO' as IsCollaborativeProjectWIthOtherEnterprisesEnum,
        Yes: 'YES' as IsCollaborativeProjectWIthOtherEnterprisesEnum
    };
    export type HasExtensiveDisseminationThroughConferencesPublicationsEtcEnum = 'NONE' | 'NO' | 'YES';
    export const HasExtensiveDisseminationThroughConferencesPublicationsEtcEnum = {
        None: 'NONE' as HasExtensiveDisseminationThroughConferencesPublicationsEtcEnum,
        No: 'NO' as HasExtensiveDisseminationThroughConferencesPublicationsEtcEnum,
        Yes: 'YES' as HasExtensiveDisseminationThroughConferencesPublicationsEtcEnum
    };
    export type WasInEconomicDifficultiesAtApplicationTimeEnum = 'NONE' | 'NO' | 'YES';
    export const WasInEconomicDifficultiesAtApplicationTimeEnum = {
        None: 'NONE' as WasInEconomicDifficultiesAtApplicationTimeEnum,
        No: 'NO' as WasInEconomicDifficultiesAtApplicationTimeEnum,
        Yes: 'YES' as WasInEconomicDifficultiesAtApplicationTimeEnum
    };
    export type UnderlyingDocumentsUsedForAssessmentEnum = 'NONE' | 'INTERIM_BALANCE' | 'ANNUAL_ACCOUNTS';
    export const UnderlyingDocumentsUsedForAssessmentEnum = {
        None: 'NONE' as UnderlyingDocumentsUsedForAssessmentEnum,
        InterimBalance: 'INTERIM_BALANCE' as UnderlyingDocumentsUsedForAssessmentEnum,
        AnnualAccounts: 'ANNUAL_ACCOUNTS' as UnderlyingDocumentsUsedForAssessmentEnum
    };
    export type ProjectToBeSignedByAuditorEnum = 'NONE' | 'NO' | 'YES';
    export const ProjectToBeSignedByAuditorEnum = {
        None: 'NONE' as ProjectToBeSignedByAuditorEnum,
        No: 'NO' as ProjectToBeSignedByAuditorEnum,
        Yes: 'YES' as ProjectToBeSignedByAuditorEnum
    };
}


