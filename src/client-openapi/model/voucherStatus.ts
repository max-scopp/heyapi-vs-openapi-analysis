/**
 * Tripletex API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Change } from './change';
import { Voucher } from './voucher';


export interface VoucherStatus { 
    id?: number;
    version?: number;
    readonly changes?: Array<Change>;
    readonly url?: string;
    voucher: Voucher;
    /**
     * The type of process
     */
    readonly type?: VoucherStatus.TypeEnum;
    /**
     * Process status
     */
    status?: VoucherStatus.StatusEnum;
    /**
     * Time of last update
     */
    readonly timestamp?: string;
    /**
     * 1 or 0 predefined status message
     */
    message?: VoucherStatus.MessageEnum;
    /**
     * Link to external object
     */
    externalObjectUrl?: string;
    comment?: string;
    /**
     * reference number to external object
     */
    referenceNumber?: string;
}
export namespace VoucherStatus {
    export type TypeEnum = 'TRIPLETEX' | 'SUPPLIERINVOICE_EXTERNAL' | 'DEBT_COLLECTION';
    export const TypeEnum = {
        Tripletex: 'TRIPLETEX' as TypeEnum,
        SupplierinvoiceExternal: 'SUPPLIERINVOICE_EXTERNAL' as TypeEnum,
        DebtCollection: 'DEBT_COLLECTION' as TypeEnum
    };
    export type StatusEnum = 'WAITING' | 'DONE' | 'SKIPPED' | 'ERROR' | 'NONE' | 'PROCESSING' | 'RECLAIMED';
    export const StatusEnum = {
        Waiting: 'WAITING' as StatusEnum,
        Done: 'DONE' as StatusEnum,
        Skipped: 'SKIPPED' as StatusEnum,
        Error: 'ERROR' as StatusEnum,
        None: 'NONE' as StatusEnum,
        Processing: 'PROCESSING' as StatusEnum,
        Reclaimed: 'RECLAIMED' as StatusEnum
    };
    export type MessageEnum = 'NONE' | 'ONGOING' | 'NEEDS_APPROVAL' | 'WITHDRAWN' | 'SETTLED';
    export const MessageEnum = {
        None: 'NONE' as MessageEnum,
        Ongoing: 'ONGOING' as MessageEnum,
        NeedsApproval: 'NEEDS_APPROVAL' as MessageEnum,
        Withdrawn: 'WITHDRAWN' as MessageEnum,
        Settled: 'SETTLED' as MessageEnum
    };
}


