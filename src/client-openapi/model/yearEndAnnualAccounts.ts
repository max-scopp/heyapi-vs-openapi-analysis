/**
 * Tripletex API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AnnualAccountsSubmissionResult } from './annualAccountsSubmissionResult';
import { Change } from './change';
import { AnnualAccountsSubTotalSection } from './annualAccountsSubTotalSection';


export interface YearEndAnnualAccounts { 
    id?: number;
    version?: number;
    readonly changes?: Array<Change>;
    readonly url?: string;
    readonly year?: number;
    sentDate?: string;
    status?: YearEndAnnualAccounts.StatusEnum;
    submissionInProgress?: boolean;
    submissionAttemptDate?: string;
    submissionResult?: AnnualAccountsSubmissionResult;
    operatingProfitRevenues?: AnnualAccountsSubTotalSection;
    operatingProfitExpenses?: AnnualAccountsSubTotalSection;
    operatingProfit?: AnnualAccountsSubTotalSection;
    netFinancialItemsIncome?: AnnualAccountsSubTotalSection;
    netFinancialItemsExpenses?: AnnualAccountsSubTotalSection;
    netFinancialItems?: AnnualAccountsSubTotalSection;
    ordinaryResultBeforeTaxes?: AnnualAccountsSubTotalSection;
    ordinaryResultAfterTaxes?: AnnualAccountsSubTotalSection;
    netProfitOrLossForTheYear?: AnnualAccountsSubTotalSection;
    netProfitOrLossForTheYearAfterMinoritiesShareOfProfit?: AnnualAccountsSubTotalSection;
    transfers?: AnnualAccountsSubTotalSection;
    fixedAssetsIntangible?: AnnualAccountsSubTotalSection;
    fixedAssetsTangible?: AnnualAccountsSubTotalSection;
    fixedAssetsFinancial?: AnnualAccountsSubTotalSection;
    fixedAssets?: AnnualAccountsSubTotalSection;
    currentAssetsStocks?: AnnualAccountsSubTotalSection;
    currentAssetsReceivables?: AnnualAccountsSubTotalSection;
    currentAssetsInvestments?: AnnualAccountsSubTotalSection;
    currentAssetsBankDepositsCash?: AnnualAccountsSubTotalSection;
    currentAssets?: AnnualAccountsSubTotalSection;
    assets?: AnnualAccountsSubTotalSection;
    equityPaidInCapital?: AnnualAccountsSubTotalSection;
    equityRetainedEarnings?: AnnualAccountsSubTotalSection;
    equity?: AnnualAccountsSubTotalSection;
    longTermLiabilitiesProvisions?: AnnualAccountsSubTotalSection;
    longTermLiabilitiesOther?: AnnualAccountsSubTotalSection;
    longTermLiabilities?: AnnualAccountsSubTotalSection;
    currentLiabilities?: AnnualAccountsSubTotalSection;
    liabilities?: AnnualAccountsSubTotalSection;
    equityAndLiabilities?: AnnualAccountsSubTotalSection;
    sumOpeningBalance?: number;
    sumClosingBalance?: number;
}
export namespace YearEndAnnualAccounts {
    export type StatusEnum = 'STARTED' | 'UPDATED' | 'RESTARTED' | 'SUBMITTED_UNSIGNED' | 'SUBMITTED_SIGNED' | 'USER_MARKED_AS_SIGNEDBYALL' | 'SYSTEM_MARKED_AS_SIGNEDBYALL';
    export const StatusEnum = {
        Started: 'STARTED' as StatusEnum,
        Updated: 'UPDATED' as StatusEnum,
        Restarted: 'RESTARTED' as StatusEnum,
        SubmittedUnsigned: 'SUBMITTED_UNSIGNED' as StatusEnum,
        SubmittedSigned: 'SUBMITTED_SIGNED' as StatusEnum,
        UserMarkedAsSignedbyall: 'USER_MARKED_AS_SIGNEDBYALL' as StatusEnum,
        SystemMarkedAsSignedbyall: 'SYSTEM_MARKED_AS_SIGNEDBYALL' as StatusEnum
    };
}


