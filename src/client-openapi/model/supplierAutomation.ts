/**
 * Tripletex API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AutomationRuleDetails } from './automationRuleDetails';


export interface SupplierAutomation { 
    vendorId: number;
    name: string;
    vendorAccountNumber: number;
    /**
     * Is automation activated?
     */
    activated?: boolean;
    /**
     * Number of automated vouchers
     */
    automatedCount?: number;
    /**
     * Number of EHF vouchers last 190 days.
     */
    voucherCountLast190DaysEhf?: number;
    /**
     * Number of non-EHF vouchers last 190 days.
     */
    voucherCountLast190DaysNonEhf?: number;
    /**
     * Number of EHF vouchers send from this supplier regardless of time.
     */
    readonly voucherCount?: number;
    /**
     * Whether the vendor can send EHF
     */
    canSendEhf: boolean;
    /**
     * email of the vendor
     */
    email: string;
    automationRulesDetails?: AutomationRuleDetails;
    /**
     * If set, the payment type to be used when automating an invoice from this vendor.
     */
    paymentTypeFabricAi?: number;
    /**
     * Description of the payment type
     */
    paymentTypeName?: string;
    /**
     * Number of invoices with valid predictions
     */
    invoicesWithValidPredictionCount?: number;
    /**
     * If set, gives the amount limit for automating invoices for this vendor, it the total invoice amount is above the limit, the invoice is not automated.
     */
    amountMaxFabricAiVendorInvoice?: number;
    /**
     * The date the user has sent the request to a supplier to receive EHF.
     */
    dateRequestEhfSent?: string;
    /**
     * Whether to allow sending EHF requests
     */
    allowSendEhfRequest: boolean;
    /**
     * Number of non-EHF vouchers last 90 days.
     */
    voucherCountLast90DaysNonEhf?: number;
    /**
     * Ready for automation status
     */
    readyForAutomation?: SupplierAutomation.ReadyForAutomationEnum;
}
export namespace SupplierAutomation {
    export type ReadyForAutomationEnum = 'NOT_SENDING_EHF' | 'TRAINING_IN_PROGRESS' | 'READY';
    export const ReadyForAutomationEnum = {
        NotSendingEhf: 'NOT_SENDING_EHF' as ReadyForAutomationEnum,
        TrainingInProgress: 'TRAINING_IN_PROGRESS' as ReadyForAutomationEnum,
        Ready: 'READY' as ReadyForAutomationEnum
    };
}


