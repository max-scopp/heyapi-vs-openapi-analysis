/**
 * Tripletex API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PersonalIncome } from './personalIncome';
import { YearEndReport } from './yearEndReport';
import { BalanceGroup } from './balanceGroup';


export interface PersonalIncomeOverview { 
    yearEndReport?: YearEndReport;
    incomeGroupId?: number;
    businessActivityType?: PersonalIncomeOverview.BusinessActivityTypeEnum;
    readonly industryId?: number;
    readonly businessActivityTitle?: string;
    readonly businessActivityDescription?: string;
    readonly businessIncome?: number;
    readonly businessIncomeForestry?: number;
    readonly businessIncomeAgriculture?: number;
    readonly businessIncomeForestryAndAgriculture?: number;
    readonly biomassCorrectionForestry?: number;
    readonly biomassCorrectionAgriculture?: number;
    readonly hideFromPersonalIncome?: boolean;
    readonly showForestryAndAgricultureCombo?: boolean;
    readonly businessIncomeAfterSharedWithSpouse?: number;
    readonly businessIncomeAfterSharedWithSpouseForestry?: number;
    readonly businessIncomeAfterSharedWithSpouseAgriculture?: number;
    readonly correctedBusinessIncome?: number;
    readonly deductionsForRiskFreeReturn?: number;
    readonly riskFreeReturn?: number;
    readonly validBasisForRiskFreeReturn?: boolean;
    readonly personalIncomeForTheYear?: number;
    readonly afterSharedWithSpouse?: number;
    readonly calculatedPersonalIncomeSpouse?: number;
    readonly calculatedBusinessIncomeSpouse?: number;
    readonly calculatedBusinessIncomeSpouseForestry?: number;
    readonly calculatedBusinessIncomeSpouseAgriculture?: number;
    readonly afterCoordination?: number;
    readonly sumOpeningBalanceBeforeEnterpriseDebt?: number;
    readonly sumClosingBalanceBeforeEnterpriseDebt?: number;
    readonly sumOpeningBalanceAfterEnterpriseDebt?: number;
    readonly sumClosingBalanceAfterEnterpriseDebt?: number;
    readonly basisForRiskFreeReturnExEnterpriseDebt?: number;
    readonly basisEnterpriseDebt?: number;
    readonly basisForRiskFreeReturnIncEnterpriseDebt?: number;
    balanceGroups?: Array<BalanceGroup>;
    posts?: Array<PersonalIncome>;
}
export namespace PersonalIncomeOverview {
    export type BusinessActivityTypeEnum = 'OTHER_COMMERCIAL_ACTIVITIES' | 'OTHER_COMMERCIAL_ACTIVITIES_2' | 'OTHER_COMMERCIAL_ACTIVITIES_3' | 'OTHER_COMMERCIAL_ACTIVITIES_4' | 'AGRICULTURE_HORTICULTURE_FUR_FARMING' | 'FISHING_AND_HUNTING_AT_SEA' | 'REINDEER_HUSBANDRY' | 'FAMILY_DAY_CARE_CENTRE_IN_OWN_HOME' | 'SLATE_QUARRYING' | 'FORESTRY' | 'NOT_INDUSTRY';
    export const BusinessActivityTypeEnum = {
        OtherCommercialActivities: 'OTHER_COMMERCIAL_ACTIVITIES' as BusinessActivityTypeEnum,
        OtherCommercialActivities2: 'OTHER_COMMERCIAL_ACTIVITIES_2' as BusinessActivityTypeEnum,
        OtherCommercialActivities3: 'OTHER_COMMERCIAL_ACTIVITIES_3' as BusinessActivityTypeEnum,
        OtherCommercialActivities4: 'OTHER_COMMERCIAL_ACTIVITIES_4' as BusinessActivityTypeEnum,
        AgricultureHorticultureFurFarming: 'AGRICULTURE_HORTICULTURE_FUR_FARMING' as BusinessActivityTypeEnum,
        FishingAndHuntingAtSea: 'FISHING_AND_HUNTING_AT_SEA' as BusinessActivityTypeEnum,
        ReindeerHusbandry: 'REINDEER_HUSBANDRY' as BusinessActivityTypeEnum,
        FamilyDayCareCentreInOwnHome: 'FAMILY_DAY_CARE_CENTRE_IN_OWN_HOME' as BusinessActivityTypeEnum,
        SlateQuarrying: 'SLATE_QUARRYING' as BusinessActivityTypeEnum,
        Forestry: 'FORESTRY' as BusinessActivityTypeEnum,
        NotIndustry: 'NOT_INDUSTRY' as BusinessActivityTypeEnum
    };
}


