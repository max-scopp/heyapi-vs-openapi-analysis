/**
 * Tripletex API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Invoice } from './invoice';
import { Address } from './address';
import { ProjectCategory } from './projectCategory';
import { Customer } from './customer';
import { Change } from './change';
import { VatType } from './vatType';
import { ProjectHourlyRate } from './projectHourlyRate';
import { Contact } from './contact';
import { Department } from './department';
import { ProjectOrderLine } from './projectOrderLine';
import { Employee } from './employee';
import { ProjectActivity } from './projectActivity';
import { Currency } from './currency';
import { ProjectParticipant } from './projectParticipant';


export interface Project { 
    id?: number;
    version?: number;
    readonly changes?: Array<Change>;
    readonly url?: string;
    name: string;
    /**
     * If NULL, a number is generated automatically.
     */
    number?: string;
    readonly displayName?: string;
    description?: string;
    projectManager: Employee;
    department?: Department;
    mainProject?: Project;
    startDate: string;
    endDate?: string;
    customer?: Customer;
    isClosed?: boolean;
    isReadyForInvoicing?: boolean;
    isInternal: boolean;
    /**
     * If is Project Offer set to true, if is Project set to false. The default value is false.
     */
    isOffer?: boolean;
    /**
     * Project is fixed price if set to true, hourly rate if set to false.
     */
    isFixedPrice?: boolean;
    projectCategory?: ProjectCategory;
    deliveryAddress?: Address;
    boligmappaAddress?: Address;
    /**
     * Defines project name presentation in overviews.
     */
    displayNameFormat?: Project.DisplayNameFormatEnum;
    reference?: string;
    externalAccountsNumber?: string;
    /**
     * Project discount percentage.
     */
    readonly discountPercentage?: number;
    vatType?: VatType;
    /**
     * Fixed price amount, in the project\'s currency.
     */
    fixedprice?: number;
    readonly contributionMarginPercent?: number;
    readonly numberOfSubProjects?: number;
    readonly numberOfProjectParticipants?: number;
    /**
     * Order lines tied to the order
     */
    readonly orderLines?: Array<ProjectOrderLine>;
    currency?: Currency;
    /**
     * Set mark-up (%) for order lines.
     */
    markUpOrderLines?: number;
    /**
     * Set mark-up (%) for fees earned.
     */
    markUpFeesEarned?: number;
    /**
     * Set to true if an hourly rate project has a price ceiling.
     */
    isPriceCeiling?: boolean;
    /**
     * Price ceiling amount, in the project\'s currency.
     */
    priceCeilingAmount?: number;
    /**
     * Project Rate Types tied to the project.
     */
    projectHourlyRates?: Array<ProjectHourlyRate>;
    /**
     * Set to true if only project participants can register information on the project
     */
    forParticipantsOnly?: boolean;
    /**
     * Link to individual project participants.
     */
    participants?: Array<ProjectParticipant>;
    contact?: Contact;
    attention?: Contact;
    /**
     * Comment for project invoices
     */
    invoiceComment?: string;
    /**
     * Invoicing plans tied to the project
     */
    readonly invoicingPlan?: Array<Invoice>;
    preliminaryInvoice?: Invoice;
    /**
     * Set to true if a general project activity must be linked to project to allow time tracking.
     */
    generalProjectActivitiesPerProjectOnly?: boolean;
    /**
     * Project Activities
     */
    projectActivities?: Array<ProjectActivity>;
    readonly hierarchyNameAndNumber?: string;
    /**
     * invoice due date
     */
    invoiceDueDate?: number;
    /**
     * Set the time unit of invoiceDueDate. The special case RECURRING_DAY_OF_MONTH enables the due date to be fixed to a specific day of the month, in this case the fixed due date will automatically be set as standard on all invoices created from this project. Note that when RECURRING_DAY_OF_MONTH is set, the due date will be set to the last day of month if \"31\" is set in invoicesDueIn.
     */
    invoiceDueDateType?: Project.InvoiceDueDateTypeEnum;
    /**
     * Set the project\'s invoice receiver email. Will override the default invoice receiver email of any customer that may also be set in the request body.
     */
    invoiceReceiverEmail?: string;
    /**
     * Set the project\'s overdue notice email. Will override the default overdue notice email of any customer that may also be set in the request body.
     */
    overdueNoticeEmail?: string;
    /**
     * READ/WRITE access on project
     */
    accessType?: Project.AccessTypeEnum;
    useProductNetPrice?: boolean;
    ignoreCompanyProductDiscountAgreement?: boolean;
    readonly customerName?: string;
    readonly hierarchyLevel?: number;
    readonly projectManagerNameAndNumber?: string;
    /**
     * Amount paid on account(a konto)
     */
    readonly totalInvoicedOnAccountAmountAbsoluteCurrency?: number;
    /**
     * The on account(a konto) amounts including VAT
     */
    invoiceOnAccountVatHigh?: boolean;
}
export namespace Project {
    export type DisplayNameFormatEnum = 'NAME_STANDARD' | 'NAME_INCL_CUSTOMER_NAME' | 'NAME_INCL_PARENT_NAME' | 'NAME_INCL_PARENT_NUMBER' | 'NAME_INCL_PARENT_NAME_AND_NUMBER';
    export const DisplayNameFormatEnum = {
        NameStandard: 'NAME_STANDARD' as DisplayNameFormatEnum,
        NameInclCustomerName: 'NAME_INCL_CUSTOMER_NAME' as DisplayNameFormatEnum,
        NameInclParentName: 'NAME_INCL_PARENT_NAME' as DisplayNameFormatEnum,
        NameInclParentNumber: 'NAME_INCL_PARENT_NUMBER' as DisplayNameFormatEnum,
        NameInclParentNameAndNumber: 'NAME_INCL_PARENT_NAME_AND_NUMBER' as DisplayNameFormatEnum
    };
    export type InvoiceDueDateTypeEnum = 'DAYS' | 'MONTHS' | 'RECURRING_DAY_OF_MONTH';
    export const InvoiceDueDateTypeEnum = {
        Days: 'DAYS' as InvoiceDueDateTypeEnum,
        Months: 'MONTHS' as InvoiceDueDateTypeEnum,
        RecurringDayOfMonth: 'RECURRING_DAY_OF_MONTH' as InvoiceDueDateTypeEnum
    };
    export type AccessTypeEnum = 'NONE' | 'READ' | 'WRITE';
    export const AccessTypeEnum = {
        None: 'NONE' as AccessTypeEnum,
        Read: 'READ' as AccessTypeEnum,
        Write: 'WRITE' as AccessTypeEnum
    };
}


