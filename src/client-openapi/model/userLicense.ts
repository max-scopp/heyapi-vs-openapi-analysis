/**
 * Tripletex API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Employee } from './employee';


export interface UserLicense { 
    startupPaid?: boolean;
    /**
     * User license id.
     */
    readonly id?: number;
    /**
     * Company id.
     */
    readonly companyId?: number;
    employee?: Employee;
    /**
     * User category of the license.
     */
    readonly userCategory?: number;
    /**
     * User license start date.
     */
    startDate: string;
    /**
     * User license end date.
     */
    endDate?: string;
    /**
     * True if startup fee has been paid, false otherwise.
     */
    readonly isStartupPaid?: boolean;
    /**
     * User license status (terminated or active)
     */
    readonly userLicenseStatus?: UserLicense.UserLicenseStatusEnum;
    /**
     * Monthly fee paid for the user license
     */
    readonly monthlyPrice?: number;
    /**
     * True if the employee was deleted but the user license still exists
     */
    readonly employeeDeleted?: boolean;
    /**
     * Display name of the deleted employee
     */
    readonly deletedEmployeeDisplayName?: string;
    lastEditedByEmployee?: Employee;
    /**
     * Timestamp when the user license was last edited. Only relevant for Tripletex.
     */
    readonly lastEditedByEmployeeTimestamp?: string;
    /**
     * Ordinal representing the position in line this discount has when receiving discounts.
     */
    readonly discountPriority?: number;
    /**
     * Discount percentage
     */
    readonly discountPercentage?: number;
}
export namespace UserLicense {
    export type UserLicenseStatusEnum = 'TERMINATED' | 'ACTIVE';
    export const UserLicenseStatusEnum = {
        Terminated: 'TERMINATED' as UserLicenseStatusEnum,
        Active: 'ACTIVE' as UserLicenseStatusEnum
    };
}


