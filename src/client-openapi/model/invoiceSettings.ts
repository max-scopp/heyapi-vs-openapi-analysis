/**
 * Tripletex API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Change } from './change';


export interface InvoiceSettings { 
    id?: number;
    version?: number;
    readonly changes?: Array<Change>;
    readonly url?: string;
    orderOfferEmailSignature?: string;
    hasFirstInvoiceNumber?: boolean;
    nextInvoiceNumber?: number;
    bankAccountReady?: boolean;
    defaultSendTypeB2B?: InvoiceSettings.DefaultSendTypeB2BEnum;
    defaultSendTypeB2C?: InvoiceSettings.DefaultSendTypeB2CEnum;
    newOrderOfferOurContactDefaultValue?: InvoiceSettings.NewOrderOfferOurContactDefaultValueEnum;
    offerFromCurrentUser?: boolean;
    orderConfirmationCurrentUser?: boolean;
    invoiceFromCurrentUser?: boolean;
    invoiceFromEmail?: string;
    offerFromEmail?: string;
    orderConfirmationEmail?: string;
    readonly defaultOrderInvoiceComment?: string;
    showBackorder?: boolean;
    setDeliverToAvailableStock?: boolean;
    availableInventory?: boolean;
    invoiceShowOrderNumber?: boolean;
    sendTypes?: Array<InvoiceSettings.SendTypesEnum>;
    /**
     * Has automatic soft reminders enabled for this company. This setting need to be enabled both here and on each customer card to take effect.
     */
    readonly isAutomaticSoftReminderEnabled?: boolean;
    /**
     * Number of days after due date automatic soft reminders should be sent out if enabled.
     */
    readonly automaticSoftReminderDaysAfterDueDate?: number;
    /**
     * Has automatic reminders enabled for this company. This setting need to be enabled both here and on each customer card to take effect.
     */
    readonly isAutomaticReminderEnabled?: boolean;
    /**
     * Number of days after due date automatic reminders should be sent ouf if enabled.
     */
    readonly automaticReminderDaysAfterDueDate?: number;
    /**
     * Has automatic notices of debt collection enabled for this company. This setting need to be enabled both here and on each customer card to take effect.
     */
    readonly isAutomaticNoticeOfDebtCollectionEnabled?: boolean;
    /**
     * Number of days after due date automatic notices of debt collection should be sent out if enabled.
     */
    readonly automaticNoticeOfDebtCollectionDaysAfterDueDate?: number;
    /**
     * Highest external invoice number for this company
     */
    readonly externalInvoiceNumber?: number;
    /**
     * Has company sent first invoice
     */
    readonly hasSentFirstInvoice?: boolean;
    /**
     * Sets the default value on customers for number of days/months in which invoices created from this order is due
     */
    invoicesDueIn?: number;
    /**
     * Set the default time unit of invoicesDueIn. The special case RECURRING_DAY_OF_MONTH enables the due date to be fixed to a specific day of the month, in this case the fixed due date will automatically be set as standard on all invoices created from this order. Note that when RECURRING_DAY_OF_MONTH is set, the due date will be set to the last day of month if \"31\" is set in invoicesDueIn.
     */
    invoicesDueInType?: InvoiceSettings.InvoicesDueInTypeEnum;
}
export namespace InvoiceSettings {
    export type DefaultSendTypeB2BEnum = 'EMAIL' | 'EHF' | 'EFAKTURA' | 'AVTALEGIRO' | 'VIPPS' | 'PAPER' | 'MANUAL' | 'DIRECT' | 'AUTOINVOICE_EHF_OUTBOUND' | 'AUTOINVOICE_EHF_INCOMING' | 'PEPPOL_EHF_INCOMING';
    export const DefaultSendTypeB2BEnum = {
        Email: 'EMAIL' as DefaultSendTypeB2BEnum,
        Ehf: 'EHF' as DefaultSendTypeB2BEnum,
        Efaktura: 'EFAKTURA' as DefaultSendTypeB2BEnum,
        Avtalegiro: 'AVTALEGIRO' as DefaultSendTypeB2BEnum,
        Vipps: 'VIPPS' as DefaultSendTypeB2BEnum,
        Paper: 'PAPER' as DefaultSendTypeB2BEnum,
        Manual: 'MANUAL' as DefaultSendTypeB2BEnum,
        Direct: 'DIRECT' as DefaultSendTypeB2BEnum,
        AutoinvoiceEhfOutbound: 'AUTOINVOICE_EHF_OUTBOUND' as DefaultSendTypeB2BEnum,
        AutoinvoiceEhfIncoming: 'AUTOINVOICE_EHF_INCOMING' as DefaultSendTypeB2BEnum,
        PeppolEhfIncoming: 'PEPPOL_EHF_INCOMING' as DefaultSendTypeB2BEnum
    };
    export type DefaultSendTypeB2CEnum = 'EMAIL' | 'EHF' | 'EFAKTURA' | 'AVTALEGIRO' | 'VIPPS' | 'PAPER' | 'MANUAL' | 'DIRECT' | 'AUTOINVOICE_EHF_OUTBOUND' | 'AUTOINVOICE_EHF_INCOMING' | 'PEPPOL_EHF_INCOMING';
    export const DefaultSendTypeB2CEnum = {
        Email: 'EMAIL' as DefaultSendTypeB2CEnum,
        Ehf: 'EHF' as DefaultSendTypeB2CEnum,
        Efaktura: 'EFAKTURA' as DefaultSendTypeB2CEnum,
        Avtalegiro: 'AVTALEGIRO' as DefaultSendTypeB2CEnum,
        Vipps: 'VIPPS' as DefaultSendTypeB2CEnum,
        Paper: 'PAPER' as DefaultSendTypeB2CEnum,
        Manual: 'MANUAL' as DefaultSendTypeB2CEnum,
        Direct: 'DIRECT' as DefaultSendTypeB2CEnum,
        AutoinvoiceEhfOutbound: 'AUTOINVOICE_EHF_OUTBOUND' as DefaultSendTypeB2CEnum,
        AutoinvoiceEhfIncoming: 'AUTOINVOICE_EHF_INCOMING' as DefaultSendTypeB2CEnum,
        PeppolEhfIncoming: 'PEPPOL_EHF_INCOMING' as DefaultSendTypeB2CEnum
    };
    export type NewOrderOfferOurContactDefaultValueEnum = 'ACCOUNT_MANAGER' | 'LOGIN_USER' | 'NONE';
    export const NewOrderOfferOurContactDefaultValueEnum = {
        AccountManager: 'ACCOUNT_MANAGER' as NewOrderOfferOurContactDefaultValueEnum,
        LoginUser: 'LOGIN_USER' as NewOrderOfferOurContactDefaultValueEnum,
        None: 'NONE' as NewOrderOfferOurContactDefaultValueEnum
    };
    export type SendTypesEnum = 'EMAIL' | 'EHF' | 'AVTALEGIRO' | 'EFAKTURA' | 'VIPPS' | 'PAPER' | 'MANUAL';
    export const SendTypesEnum = {
        Email: 'EMAIL' as SendTypesEnum,
        Ehf: 'EHF' as SendTypesEnum,
        Avtalegiro: 'AVTALEGIRO' as SendTypesEnum,
        Efaktura: 'EFAKTURA' as SendTypesEnum,
        Vipps: 'VIPPS' as SendTypesEnum,
        Paper: 'PAPER' as SendTypesEnum,
        Manual: 'MANUAL' as SendTypesEnum
    };
    export type InvoicesDueInTypeEnum = 'DAYS' | 'MONTHS' | 'RECURRING_DAY_OF_MONTH';
    export const InvoicesDueInTypeEnum = {
        Days: 'DAYS' as InvoicesDueInTypeEnum,
        Months: 'MONTHS' as InvoicesDueInTypeEnum,
        RecurringDayOfMonth: 'RECURRING_DAY_OF_MONTH' as InvoicesDueInTypeEnum
    };
}


