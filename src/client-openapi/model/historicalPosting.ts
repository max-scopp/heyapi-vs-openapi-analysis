/**
 * Tripletex API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Account } from './account';
import { Project } from './project';
import { Department } from './department';
import { ProductUnit } from './productUnit';
import { Employee } from './employee';
import { Customer } from './customer';
import { Currency } from './currency';
import { Product } from './product';
import { Supplier } from './supplier';
import { Change } from './change';
import { VatType } from './vatType';
import { Voucher } from './voucher';


export interface HistoricalPosting { 
    id?: number;
    version?: number;
    readonly changes?: Array<Change>;
    readonly url?: string;
    voucher?: Voucher;
    /**
     * The posting date.
     */
    date: string;
    /**
     * The description of the posting.
     */
    description?: string;
    account: Account;
    customer?: Customer;
    supplier?: Supplier;
    employee?: Employee;
    project?: Project;
    product?: Product;
    department?: Department;
    vatType?: VatType;
    /**
     * The posting amount in company currency. Important: The amounts in this amount field must have sum = 0 on all the dates. If multiple postings with different dates, then the sum must be 0 on each of the dates.
     */
    amount: number;
    /**
     * The posting amount in posting currency.
     */
    amountCurrency: number;
    /**
     * The posting gross amount in company currency.
     */
    amountGross: number;
    /**
     * The posting gross amount in posting currency.
     */
    amountGrossCurrency: number;
    /**
     * The amount of vat on this posting in company currency (NOK).
     */
    amountVat: number;
    currency: Currency;
    /**
     * Invoice number.
     */
    invoiceNumber?: string;
    /**
     * Due date.
     */
    termOfPayment?: string;
    /**
     * Optional. Used to create a close group for postings.
     */
    closeGroup?: string;
    /**
     * The quantity amount associated with the posting
     */
    quantityAmount1?: number;
    quantityType1?: ProductUnit;
    /**
     * The quantity amount associated with the posting
     */
    quantityAmount2?: number;
    quantityType2?: ProductUnit;
}

